#cmake_minimum_required(VERSION 3.18)
#project(my_hpx_project C)
#set(LLVM_INSTALL_DIR /home/aarya/stellar/llvm_installation/)
#set(CMAKE_BUILD_TYPE Debug)
#set(CMAKE_C_COMPILER ${LLVM_INSTALL_DIR}/bin/clang)
#set(CMAKE_CXX_COMPILER ${LLVM_INSTALL_DIR}/bin/clang++)
#link_directories(${LLVM_INSTALL_DIR}/lib)
#find_package(HPX REQUIRED)
#find_package(OpenMP)
#if (OPENMP_FOUND)
#    set (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
#    set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
#    set (CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
#endif()
#add_executable(my_hpx_program hello.c)
##set(CMAKE_CXX_FLAGS "-fopenmp")
#target_link_libraries(my_hpx_program HPX::hpx libomp.so)

cmake_minimum_required(VERSION 3.18)

project(hpxMP C CXX)
option(WITH_HPXC "Use HPX threading system." ON)
if (WITH_HPXC)
	message("Yes")
  find_package(HPX REQUIRED)
  add_definitions(-DHPXC)
endif()

#set(CMAKE_CXX_FLAGS "-fopenmp")

add_executable(hello_world hello.cpp)
if (WITH_HPXC)
  target_link_libraries(hello_world ${OMP_LIB_PATH} pthread HPX::hpx HPX::wrap_main)
else()
  target_link_libraries(hello_world ${OMP_LIB_PATH} pthread)
endif()
